/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FixedPointMathOpsTest,
  FixedPointMathOpsTestInterface,
  StateConfigStruct,
} from "../FixedPointMathOpsTest";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
        ],
        internalType: "struct StateConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    inputs: [],
    name: "run",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "runState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        internalType: "struct State",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001b1d38038062001b1d8339810160408190526200003491620003fd565b60056080526200004e620000488262000061565b6200019b565b6001600160a01b031660a0525062000759565b620000946040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b815151620000d45760405162461bcd60e51b8152602060048201526009602482015268305f534f555243455360b81b604482015260640160405180910390fd5b6040518060a001604052806000815260200183604001516001600160401b03811115620001055762000105620002bd565b6040519080825280602002602001820160405280156200012f578160200160208202803683370190505b508152602001836000015181526020018360200151815260200183606001516001600160401b03811115620001685762000168620002bd565b60405190808252806020026020018201604052801562000192578160200160208202803683370190505b50905292915050565b600080620001d583604051602001620001b5919062000694565b6040516020818303038152906040526200021a60201b6200012f1760201c565b90507ff95eed63f55d96a35306669cc3b5f652f8d44552e3e4b17b2f78f13571114abd3382856040516200020c93929190620006b0565b60405180910390a192915050565b6000806200025483604051602001620002349190620006de565b6040516020818303038152906040526200028f60201b620001ba1760201c565b90508051602082016000f091506001600160a01b038216620002895760405163046a55db60e11b815260040160405180910390fd5b50919050565b6060815182604051602001620002a792919062000706565b6040516020818303038152906040529050919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715620002f857620002f8620002bd565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003295762000329620002bd565b604052919050565b60006001600160401b038211156200034d576200034d620002bd565b5060051b60200190565b60005b83811015620003745781810151838201526020016200035a565b8381111562000384576000848401525b50505050565b600082601f8301126200039c57600080fd5b81516020620003b5620003af8362000331565b620002fe565b82815260059290921b84018101918181019086841115620003d557600080fd5b8286015b84811015620003f25780518352918301918301620003d9565b509695505050505050565b600060208083850312156200041157600080fd5b82516001600160401b03808211156200042957600080fd5b90840190608082870312156200043e57600080fd5b62000448620002d3565b8251828111156200045857600080fd5b8301601f810188136200046a57600080fd5b80516200047b620003af8262000331565b81815260059190911b8201860190868101908a8311156200049b57600080fd5b8784015b838110156200053157805187811115620004b95760008081fd5b8501603f81018d13620004cc5760008081fd5b89810151604089821115620004e557620004e5620002bd565b620004f9601f8301601f19168d01620002fe565b8281528f828486010111156200050f5760008081fd5b62000520838e830184870162000357565b86525050509188019188016200049f565b50845250505082840151828111156200054957600080fd5b62000557888286016200038a565b858301525060408301516040820152606083015160608201528094505050505092915050565b600081518084526020808501945080840160005b83811015620005af5781518752958201959082019060010162000591565b509495945050505050565b80518252600060208083015160a082860152620005db60a08601826200057d565b9050604084015185820360408701528181518084528484019150848160051b850101858401935060005b828110156200064f57601f19808784030185528551805180855262000630818b87018c850162000357565b9689019695890195601f01909116929092018701915060010162000605565b506060880151955088810360608a01526200066b81876200057d565b95505050505050608083015184820360808601526200068b82826200057d565b95945050505050565b602081526000620006a96020830184620005ba565b9392505050565b6001600160a01b038481168252831660208201526060604082018190526000906200068b90830184620005ba565b6000815260008251620006f981600185016020870162000357565b9190910160010192915050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b600582015281516000906200074b81600e85016020870162000357565b91909101600e019392505050565b60805160a05161139f6200077e600039600060a80152600061062c015261139f6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806345c6a7a61461003b578063c040622614610059575b600080fd5b61004361006f565b6040516100509190610c1d565b60405180910390f35b6100616100ee565b604051908152602001610050565b6100a16040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b60006100cc7f00000000000000000000000000000000000000000000000000000000000000006101e6565b90506100e96040518060200160405280600081525082600061023a565b919050565b6000806100f961006f565b90508060200151600182600001516101119190610d31565b8151811061012157610121610d48565b602002602001015191505090565b60008061015a836040516020016101469190610d77565b6040516020818303038152906040526101ba565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff82166101b4576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b60608151826040516020016101d0929190610d9d565b6040516020818303038152906040529050919050565b6102186040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b61022182610400565b806020019051810190610234919061106c565b92915050565b602082810151604084015183830201909101516060840151608085015182516000948594859492939092915b848810156103f3576002880197508784015180601e1a975080601f1a96505060058710156103e75760018714156102c95781608087166102a35750825b8a516020607f89160260200182015160208202602001840152600181018c525050610266565b60028714156102f45789516020870260200182015160208202602001830152600181018b5250610266565b600387141561030d576103088b8b8861042e565b610266565b600487141561033e576103088a60405160200161032a9190610c1d565b604051602081830303815290604052610594565b607f6101fe600188901b1617861660808716156103aa578a517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808c5260208c01518051909190811061039457610394610d48565b6020026020010151600014156103aa5750610266565b8060000b6000146103e15760008160000b12156103d557801960020160020260ff16890398506103e1565b8060020260ff16890198505b50610266565b6103088b8b8989610626565b5050505050505050505050565b60606102348260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610659565b81517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600583901c918290030183526007821690610100600384811c1681901c91908290039060010160008167ffffffffffffffff81111561049257610492610e34565b6040519080825280602002602001820160405280156104bb578160200160208202803683370190505b50905060005b8281101561051257876020015181896000015101815181106104e5576104e5610d48565b60200260200101518282815181106104ff576104ff610d48565b60209081029190910101526001016104c1565b5060005b6101008110156105895760005b83811015610576578482860384838151811061054157610541610d48565b6020026020010151901b901c8960800151828151811061056357610563610d48565b6020908102919091010152600101610523565b5061058289898861023a565b8401610516565b505050505050505050565b610623816040516024016105a8919061114f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0be77f5600000000000000000000000000000000000000000000000000000000179052610747565b50565b610653837f0000000000000000000000000000000000000000000000000000000000000000840383610768565b50505050565b6060833b80610678575050604080516020810190915260008152610740565b80841115610696575050604080516020810190915260008152610740565b838310156106e6576040517f2c4a89fa0000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604481018490526064015b60405180910390fd5b83830384820360008282106106fb57826106fd565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050505b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600782106107d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f44450000000000000000000000000000000000000000000060448201526064016106dd565b600282101561091e5782517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe018261087d578360200151816001018151811061081d5761081d610d48565b6020026020010151610855838660200151848151811061083f5761083f610d48565b6020026020010151610a9b90919063ffffffff16565b028460200151828151811061086c5761086c610d48565b6020026020010181815250506108f2565b60018314156108f2578360200151816001018151811061089f5761089f610d48565b60200260200101516108c1838660200151848151811061083f5761083f610d48565b816108ce576108ce611162565b04846020015182815181106108e5576108e5610d48565b6020026020010181815250505b5082517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018352505050565b6005821015610a2f5782517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160028314156109955761096e828560200151838151811061083f5761083f610d48565b8460200151828151811061098457610984610d48565b602002602001018181525050610653565b60038314156109ce5761096e82856020015183815181106109b8576109b8610d48565b6020026020010151610afd90919063ffffffff16565b600483141561065357610a0782856020015183815181106109f1576109f1610d48565b6020026020010151610b2e90919063ffffffff16565b84602001518281518110610a1d57610a1d610d48565b60200260200101818152505050505050565b6005821415610a7157602083015183518151670de0b6b3a76400009291908110610a5b57610a5b610d48565b6020908102919091010152505080516001019052565b6006821415610a965760128360200151846000015181518110610a5b57610a5b610d48565b505050565b60008160121415610aad575081610234565b8160121115610add57610ac1826012610d31565b610acc90600a6112b1565b610ad690846112bd565b9050610234565b610ae8601283610d31565b610af390600a6112b1565b610ad690846112fa565b60006012821415610b0f575081610234565b8160121115610b2357610ae8826012610d31565b610ac1601283610d31565b600081810b610b3e575081610234565b60008260000b1315610b5557610acc82600a611335565b610b6182196001611344565b610af390600a611335565b600081518084526020808501945080840160005b83811015610b9c57815187529582019590820190600101610b80565b509495945050505050565b60005b83811015610bc2578181015183820152602001610baa565b838111156106535750506000910152565b60008151808452610beb816020860160208601610ba7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060208083528351818401528084015160a06040850152610c4260c0850182610b6c565b905060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808684030160608701528282518085528585019150858160051b860101868501945060005b82811015610cbb5784878303018452610ca9828751610bd3565b95880195938801939150600101610c8f565b5060608a01519650838982030160808a0152610cd78188610b6c565b965050505060808701519250808685030160a08701525050610cf98282610b6c565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610d4357610d43610d02565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815260008251610d90816001850160208701610ba7565b9190910160010192915050565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f30000000000000000000000000000000000000000000000600582015260008251610e2681600e850160208701610ba7565b91909101600e019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610e8657610e86610e34565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ed357610ed3610e34565b604052919050565b600067ffffffffffffffff821115610ef557610ef5610e34565b5060051b60200190565b600082601f830112610f1057600080fd5b81516020610f25610f2083610edb565b610e8c565b82815260059290921b84018101918181019086841115610f4457600080fd5b8286015b84811015610f5f5780518352918301918301610f48565b509695505050505050565b6000601f8381840112610f7c57600080fd5b82516020610f8c610f2083610edb565b82815260059290921b85018101918181019087841115610fab57600080fd5b8287015b8481101561106057805167ffffffffffffffff80821115610fd05760008081fd5b818a0191508a603f830112610fe55760008081fd5b85820151604082821115610ffb57610ffb610e34565b61102a887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c85011601610e8c565b92508183528c818386010111156110415760008081fd5b61105082898501838701610ba7565b5050845250918301918301610faf565b50979650505050505050565b60006020828403121561107e57600080fd5b815167ffffffffffffffff8082111561109657600080fd5b9083019060a082860312156110aa57600080fd5b6110b2610e63565b825181526020830151828111156110c857600080fd5b6110d487828601610eff565b6020830152506040830151828111156110ec57600080fd5b6110f887828601610f6a565b60408301525060608301518281111561111057600080fd5b61111c87828601610eff565b60608301525060808301518281111561113457600080fd5b61114087828601610eff565b60808301525095945050505050565b6020815260006107406020830184610bd3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600181815b808511156111ea57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156111d0576111d0610d02565b808516156111dd57918102915b93841c9390800290611196565b509250929050565b60008261120157506001610234565b8161120e57506000610234565b8160018114611224576002811461122e5761124a565b6001915050610234565b60ff84111561123f5761123f610d02565b50506001821b610234565b5060208310610133831016604e8410600b841016171561126d575081810a610234565b6112778383611191565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156112a9576112a9610d02565b029392505050565b600061074083836111f2565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112f5576112f5610d02565b500290565b600082611330577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600061074060ff8416836111f2565b600060ff821660ff84168060ff0382111561136157611361610d02565b01939250505056fea26469706673582212203299c967d9555760d904257bf0b36e39c97086f7e3264cbd71a8756fac85148964736f6c634300080a0033";

type FixedPointMathOpsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FixedPointMathOpsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FixedPointMathOpsTest__factory extends ContractFactory {
  constructor(...args: FixedPointMathOpsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FixedPointMathOpsTest> {
    return super.deploy(
      config_,
      overrides || {}
    ) as Promise<FixedPointMathOpsTest>;
  }
  getDeployTransaction(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(config_, overrides || {});
  }
  attach(address: string): FixedPointMathOpsTest {
    return super.attach(address) as FixedPointMathOpsTest;
  }
  connect(signer: Signer): FixedPointMathOpsTest__factory {
    return super.connect(signer) as FixedPointMathOpsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedPointMathOpsTestInterface {
    return new utils.Interface(_abi) as FixedPointMathOpsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FixedPointMathOpsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FixedPointMathOpsTest;
  }
}
