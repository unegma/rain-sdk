/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CalculatorTest,
  CalculatorTestInterface,
  StateConfigStruct,
} from "../CalculatorTest";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
        ],
        internalType: "struct StateConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    inputs: [],
    name: "run",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "runState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        internalType: "struct State",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001d5d38038062001d5d833981016040819052620000349162000410565b60056080819052620000499060049062000590565b60a052620000616200005b8262000074565b620001ae565b6001600160a01b031660c0525062000793565b620000a76040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b815151620000e75760405162461bcd60e51b8152602060048201526009602482015268305f534f555243455360b81b604482015260640160405180910390fd5b6040518060a001604052806000815260200183604001516001600160401b03811115620001185762000118620002d0565b60405190808252806020026020018201604052801562000142578160200160208202803683370190505b508152602001836000015181526020018360200151815260200183606001516001600160401b038111156200017b576200017b620002d0565b604051908082528060200260200182016040528015620001a5578160200160208202803683370190505b50905292915050565b600080620001e883604051602001620001c89190620006ce565b6040516020818303038152906040526200022d60201b6200012f1760201c565b90507ff95eed63f55d96a35306669cc3b5f652f8d44552e3e4b17b2f78f13571114abd3382856040516200021f93929190620006ea565b60405180910390a192915050565b600080620002678360405160200162000247919062000718565b604051602081830303815290604052620002a260201b620001ba1760201c565b90508051602082016000f091506001600160a01b0382166200029c5760405163046a55db60e11b815260040160405180910390fd5b50919050565b6060815182604051602001620002ba92919062000740565b6040516020818303038152906040529050919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156200030b576200030b620002d0565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200033c576200033c620002d0565b604052919050565b60006001600160401b03821115620003605762000360620002d0565b5060051b60200190565b60005b83811015620003875781810151838201526020016200036d565b8381111562000397576000848401525b50505050565b600082601f830112620003af57600080fd5b81516020620003c8620003c28362000344565b62000311565b82815260059290921b84018101918181019086841115620003e857600080fd5b8286015b84811015620004055780518352918301918301620003ec565b509695505050505050565b600060208083850312156200042457600080fd5b82516001600160401b03808211156200043c57600080fd5b90840190608082870312156200045157600080fd5b6200045b620002e6565b8251828111156200046b57600080fd5b8301601f810188136200047d57600080fd5b80516200048e620003c28262000344565b81815260059190911b8201860190868101908a831115620004ae57600080fd5b8784015b838110156200054457805187811115620004cc5760008081fd5b8501603f81018d13620004df5760008081fd5b89810151604089821115620004f857620004f8620002d0565b6200050c601f8301601f19168d0162000311565b8281528f82848601011115620005225760008081fd5b62000533838e83018487016200036a565b8652505050918801918801620004b2565b50845250505082840151828111156200055c57600080fd5b6200056a888286016200039d565b858301525060408301516040820152606083015160608201528094505050505092915050565b60008219821115620005b257634e487b7160e01b600052601160045260246000fd5b500190565b600081518084526020808501945080840160005b83811015620005e957815187529582019590820190600101620005cb565b509495945050505050565b80518252600060208083015160a0828601526200061560a0860182620005b7565b9050604084015185820360408701528181518084528484019150848160051b850101858401935060005b828110156200068957601f1980878403018552855180518085526200066a818b87018c85016200036a565b9689019695890195601f0190911692909201870191506001016200063f565b506060880151955088810360608a0152620006a58187620005b7565b9550505050505060808301518482036080860152620006c58282620005b7565b95945050505050565b602081526000620006e36020830184620005f4565b9392505050565b6001600160a01b03848116825283166020820152606060408201819052600090620006c590830184620005f4565b6000815260008251620007338160018501602087016200036a565b9190910160010192915050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b600582015281516000906200078581600e8501602087016200036a565b91909101600e019392505050565b60805160a05160c051611594620007c9600039600060a801526000818161062801526106860152600061065401526115946000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806345c6a7a61461003b578063c040622614610059575b600080fd5b61004361006f565b6040516100509190610e41565b60405180910390f35b6100616100ee565b604051908152602001610050565b6100a16040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b60006100cc7f00000000000000000000000000000000000000000000000000000000000000006101e6565b90506100e96040518060200160405280600081525082600061023a565b919050565b6000806100f961006f565b90508060200151600182600001516101119190610f55565b8151811061012157610121610f6c565b602002602001015191505090565b60008061015a836040516020016101469190610f9b565b6040516020818303038152906040526101ba565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff82166101b4576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b60608151826040516020016101d0929190610fc1565b6040516020818303038152906040529050919050565b6102186040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b61022182610400565b8060200190518101906102349190611290565b92915050565b602082810151604084015183830201909101516060840151608085015182516000948594859492939092915b848810156103f3576002880197508784015180601e1a975080601f1a96505060058710156103e75760018714156102c95781608087166102a35750825b8a516020607f89160260200182015160208202602001840152600181018c525050610266565b60028714156102f45789516020870260200182015160208202602001830152600181018b5250610266565b600387141561030d576103088b8b8861042e565b610266565b600487141561033e576103088a60405160200161032a9190610e41565b604051602081830303815290604052610594565b607f6101fe600188901b1617861660808716156103aa578a517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808c5260208c01518051909190811061039457610394610f6c565b6020026020010151600014156103aa5750610266565b8060000b6000146103e15760008160000b12156103d557801960020160020260ff16890398506103e1565b8060020260ff16890198505b50610266565b6103088b8b8989610626565b5050505050505050505050565b60606102348260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6106b3565b81517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600583901c918290030183526007821690610100600384811c1681901c91908290039060010160008167ffffffffffffffff81111561049257610492611058565b6040519080825280602002602001820160405280156104bb578160200160208202803683370190505b50905060005b8281101561051257876020015181896000015101815181106104e5576104e5610f6c565b60200260200101518282815181106104ff576104ff610f6c565b60209081029190910101526001016104c1565b5060005b6101008110156105895760005b83811015610576578482860384838151811061054157610541610f6c565b6020026020010151901b901c8960800151828151811061056357610563610f6c565b6020908102919091010152600101610523565b5061058289898861023a565b8401610516565b505050505050505050565b610623816040516024016105a89190611373565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0be77f56000000000000000000000000000000000000000000000000000000001790526107a1565b50565b7f00000000000000000000000000000000000000000000000000000000000000008210156106805761067b837f00000000000000000000000000000000000000000000000000000000000000008403836107c2565b6106ad565b6106ad837f00000000000000000000000000000000000000000000000000000000000000008403836108d8565b50505050565b6060833b806106d257505060408051602081019091526000815261079a565b808411156106f057505060408051602081019091526000815261079a565b83831015610740576040517f2c4a89fa0000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604481018490526064015b60405180910390fd5b83830384820360008282106107555782610757565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050505b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6004821061082c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f4445000000000000000000000000000000000000000000006044820152606401610737565b8161085d5743836020015184600001518151811061084c5761084c610f6c565b6020026020010181815250506108cd565b60018214156108815742836020015184600001518151811061084c5761084c610f6c565b60028214156108a55760208301518351815133929190811061084c5761084c610f6c565b6020830151835181513092919081106108c0576108c0610f6c565b6020026020010181815250505b505080516001019052565b600b8210610942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f4445000000000000000000000000000000000000000000006044820152606401610737565b825160208401518051838303927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01918391600091908390811061098857610988610f6c565b6020026020010151905060008614156109e0575b828210156109db5760208701518051600190930192839081106109c1576109c1610f6c565b6020026020010151816109d49190611386565b905061099c565b610ce0565b6001861415610a31575b828210156109db578180600101925050610a2a87602001518381518110610a1357610a13610f6c565b602002602001015182610d0f90919063ffffffff16565b90506109ea565b6002861415610a7a575b828210156109db576020870151805160019093019283908110610a6057610a60610f6c565b602002602001015181610a739190610f55565b9050610a3b565b6003861415610acb575b828210156109db578180600101925050610ac487602001518381518110610aad57610aad610f6c565b602002602001015182610d4b90919063ffffffff16565b9050610a84565b6004861415610b14575b828210156109db576020870151805160019093019283908110610afa57610afa610f6c565b602002602001015181610b0d919061139e565b9050610ad5565b6005861415610b65575b828210156109db578180600101925050610b5e87602001518381518110610b4757610b47610f6c565b602002602001015182610d6190919063ffffffff16565b9050610b1e565b6006861415610bae575b828210156109db576020870151805160019093019283908110610b9457610b94610f6c565b602002602001015181610ba7919061140a565b9050610b6f565b6007861415610bf7575b828210156109db576020870151805160019093019283908110610bdd57610bdd610f6c565b602002602001015181610bf0919061141e565b9050610bb8565b6008861415610c40575b828210156109db576020870151805160019093019283908110610c2657610c26610f6c565b602002602001015181610c399190611552565b9050610c01565b6009861415610c925760005b83831015610c8c576020880151805160019094019384908110610c7157610c71610f6c565b6020026020010151905081811015610c87578091505b610c4c565b50610ce0565b600a861415610ce05760005b83831015610cde576020880151805160019094019384908110610cc357610cc3610f6c565b6020026020010151905081811115610cd9578091505b610c9e565b505b8087602001518581518110610cf757610cf7610f6c565b60209081029190910101525050506001019092525050565b6000828201838110610d215780610d43565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b949350505050565b6000818311610d5b57600061079a565b50900390565b600082610d7057506000610234565b82820282848281610d8357610d836113db565b041415610d215780610d43565b600081518084526020808501945080840160005b83811015610dc057815187529582019590820190600101610da4565b509495945050505050565b60005b83811015610de6578181015183820152602001610dce565b838111156106ad5750506000910152565b60008151808452610e0f816020860160208601610dcb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060208083528351818401528084015160a06040850152610e6660c0850182610d90565b905060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808684030160608701528282518085528585019150858160051b860101868501945060005b82811015610edf5784878303018452610ecd828751610df7565b95880195938801939150600101610eb3565b5060608a01519650838982030160808a0152610efb8188610d90565b965050505060808701519250808685030160a08701525050610f1d8282610d90565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610f6757610f67610f26565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815260008251610fb4816001850160208701610dcb565b9190910160010192915050565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f3000000000000000000000000000000000000000000000060058201526000825161104a81600e850160208701610dcb565b91909101600e019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156110aa576110aa611058565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110f7576110f7611058565b604052919050565b600067ffffffffffffffff82111561111957611119611058565b5060051b60200190565b600082601f83011261113457600080fd5b81516020611149611144836110ff565b6110b0565b82815260059290921b8401810191818101908684111561116857600080fd5b8286015b84811015611183578051835291830191830161116c565b509695505050505050565b6000601f83818401126111a057600080fd5b825160206111b0611144836110ff565b82815260059290921b850181019181810190878411156111cf57600080fd5b8287015b8481101561128457805167ffffffffffffffff808211156111f45760008081fd5b818a0191508a603f8301126112095760008081fd5b8582015160408282111561121f5761121f611058565b61124e887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c850116016110b0565b92508183528c818386010111156112655760008081fd5b61127482898501838701610dcb565b50508452509183019183016111d3565b50979650505050505050565b6000602082840312156112a257600080fd5b815167ffffffffffffffff808211156112ba57600080fd5b9083019060a082860312156112ce57600080fd5b6112d6611087565b825181526020830151828111156112ec57600080fd5b6112f887828601611123565b60208301525060408301518281111561131057600080fd5b61131c8782860161118e565b60408301525060608301518281111561133457600080fd5b61134087828601611123565b60608301525060808301518281111561135857600080fd5b61136487828601611123565b60808301525095945050505050565b60208152600061079a6020830184610df7565b6000821982111561139957611399610f26565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113d6576113d6610f26565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611419576114196113db565b500490565b60008261142d5761142d6113db565b500690565b600181815b8085111561148b57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561147157611471610f26565b8085161561147e57918102915b93841c9390800290611437565b509250929050565b6000826114a257506001610234565b816114af57506000610234565b81600181146114c557600281146114cf576114eb565b6001915050610234565b60ff8411156114e0576114e0610f26565b50506001821b610234565b5060208310610133831016604e8410600b841016171561150e575081810a610234565b6115188383611432565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561154a5761154a610f26565b029392505050565b600061079a838361149356fea26469706673582212202b0c9f91db83ddf9be4526d1ea8558b519319d247bc8aaec650b278cbd34071b64736f6c634300080a0033";

type CalculatorTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalculatorTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CalculatorTest__factory extends ContractFactory {
  constructor(...args: CalculatorTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CalculatorTest> {
    return super.deploy(config_, overrides || {}) as Promise<CalculatorTest>;
  }
  getDeployTransaction(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(config_, overrides || {});
  }
  attach(address: string): CalculatorTest {
    return super.attach(address) as CalculatorTest;
  }
  connect(signer: Signer): CalculatorTest__factory {
    return super.connect(signer) as CalculatorTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalculatorTestInterface {
    return new utils.Interface(_abi) as CalculatorTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CalculatorTest {
    return new Contract(address, _abi, signerOrProvider) as CalculatorTest;
  }
}
