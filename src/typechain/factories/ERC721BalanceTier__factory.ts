/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721BalanceTier,
  ERC721BalanceTierInterface,
} from "../ERC721BalanceTier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "erc721",
        type: "address",
      },
    ],
    name: "Initialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    name: "InitializeValueTier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "TierChange",
    type: "event",
  },
  {
    inputs: [],
    name: "erc721",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC721",
            name: "erc721",
            type: "address",
          },
          {
            internalType: "uint256[8]",
            name: "tierValues",
            type: "uint256[8]",
          },
        ],
        internalType: "struct ERC721BalanceTierConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "report",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "setTier",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tierValues",
    outputs: [
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d23806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a61e331511610050578063a61e33151461009f578063bca6ce64146100b2578063e053ea31146100f757600080fd5b806370230b391461006c5780638a200fff1461008a575b600080fd5b610074610118565b60405161008191906108e8565b60405180910390f35b61009d61009836600461093f565b61015a565b005b61009d6100ad366004610a21565b6101c1565b6001546100d29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610081565b61010a610105366004610abf565b6103be565b604051908152602001610081565b6101206108c9565b6000546101429073ffffffffffffffffffffffffffffffffffffffff16610474565b8060200190518101906101559190610adc565b905090565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f5345545f5449455200000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000547501000000000000000000000000000000000000000000900460ff166102085760005474010000000000000000000000000000000000000000900460ff161561020c565b303b155b610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016101b8565b6000547501000000000000000000000000000000000000000000900460ff161580156102ff57600080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff1675010100000000000000000000000000000000000000001790555b61030c82602001516104a2565b8151600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691821790556040805133815260208101929092527fdc90fed0326ba91706deeac7eb34ac9f8b680734f9d782864dc29704d23bed6a910160405180910390a180156103ba57600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1690555b5050565b600061046e60006104696103d0610118565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152909116906370a0823190602401602060405180830381865afa158015610440573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104649190610b3d565b61063b565b610689565b92915050565b606061046e8260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610729565b60005473ffffffffffffffffffffffffffffffffffffffff16156104c8576104c8610b56565b6000805b600881101561057657818382600881106104e8576104e8610b85565b60200201511015610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f55545f4f465f4f524445525f544945525f56414c554553000000000000000060448201526064016101b8565b82816008811061056757610567610b85565b602002015191506001016104cc565b505060006105a28260405160200161058e91906108e8565b604051602081830303815290604052610812565b6040805133815273ffffffffffffffffffffffffffffffffffffffff831660208201529192507f18ebb958e85030233374c8eb79c1a72ee418770db7fb47a7de05d30c868ec958910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b6000805b600881101561067f5783816008811061065a5761065a610b85565b602002015183101561066d57905061046e565b8061067781610bb4565b91505061063f565b5060089392505050565b60008160088111156106f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f5449455200000000000000000000000000000000000000000000000060448201526064016101b8565b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60209190910290811c901b1790565b6060833b8061074857505060408051602081019091526000815261080b565b8084111561076657505060408051602081019091526000815261080b565b838310156107b1576040517f2c4a89fa0000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604481018490526064016101b8565b83830384820360008282106107c657826107c8565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050505b9392505050565b60008061083d836040516020016108299190610c4f565b60405160208183030381529060405261089d565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff8216610897576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b60608151826040516020016108b3929190610c62565b6040516020818303038152906040529050919050565b6040518061010001604052806008906020820280368337509192915050565b6101008101818360005b60088110156109115781518352602092830192909101906001016108f2565b50505092915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461093c57600080fd5b50565b6000806000806060858703121561095557600080fd5b84356109608161091a565b935060208501359250604085013567ffffffffffffffff8082111561098457600080fd5b818701915087601f83011261099857600080fd5b8135818111156109a757600080fd5b8860208285010111156109b957600080fd5b95989497505060200194505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610a1b57610a1b6109c8565b60405290565b6000610120808385031215610a3557600080fd5b6040516040810181811067ffffffffffffffff82111715610a5857610a586109c8565b6040528335610a668161091a565b81526020603f85018613610a7957600080fd5b610a816109f7565b928501928087851115610a9357600080fd5b8287015b85811015610aae5780358352918301918301610a97565b509183019190915250949350505050565b600060208284031215610ad157600080fd5b813561080b8161091a565b6000610100808385031215610af057600080fd5b83601f840112610aff57600080fd5b610b076109f7565b908301908085831115610b1957600080fd5b845b83811015610b33578051835260209283019201610b1b565b5095945050505050565b600060208284031215610b4f57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000815160005b81811015610c355760208185018101518683015201610c1b565b81811115610c44576000828601525b509290920192915050565b60008152600061080b6001830184610c14565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f3000000000000000000000000000000000000000000000060058201526000610ce5600e830184610c14565b94935050505056fea2646970667358221220a2c0159449bf03c92fe54bb3bf6178bdc9f3711ea938c6bad96fcf5a9749da1764736f6c634300080a0033";

type ERC721BalanceTierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BalanceTierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721BalanceTier__factory extends ContractFactory {
  constructor(...args: ERC721BalanceTierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721BalanceTier> {
    return super.deploy(overrides || {}) as Promise<ERC721BalanceTier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721BalanceTier {
    return super.attach(address) as ERC721BalanceTier;
  }
  connect(signer: Signer): ERC721BalanceTier__factory {
    return super.connect(signer) as ERC721BalanceTier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BalanceTierInterface {
    return new utils.Interface(_abi) as ERC721BalanceTierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721BalanceTier {
    return new Contract(address, _abi, signerOrProvider) as ERC721BalanceTier;
  }
}
