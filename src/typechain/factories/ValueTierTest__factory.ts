/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ValueTierTest, ValueTierTestInterface } from "../ValueTierTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    name: "InitializeValueTier",
    type: "event",
  },
  {
    inputs: [],
    name: "tierValues",
    outputs: [
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tier_",
        type: "uint256",
      },
    ],
    name: "wrappedTierToValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
    ],
    name: "wrappedValueToTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620009eb380380620009eb833981016040819052620000349162000248565b6200003f8162000046565b50620003da565b6000546001600160a01b031615620000625762000062620002da565b6000805b6008811015620001035781838260088110620000865762000086620002f0565b60200201511015620000de5760405162461bcd60e51b815260206004820152601860248201527f4f55545f4f465f4f524445525f544945525f56414c5545530000000000000000604482015260640160405180910390fd5b828160088110620000f357620000f3620002f0565b6020020151915060010162000066565b505060006200013e826040516020016200011e919062000306565b604051602081830303815290604052620001a560201b620001021760201c565b604080513381526001600160a01b03831660208201529192507f18ebb958e85030233374c8eb79c1a72ee418770db7fb47a7de05d30c868ec958910160405180910390a1600080546001600160a01b0319166001600160a01b039290921691909117905550565b600080620001df83604051602001620001bf919062000378565b6040516020818303038152906040526200021a60201b6200018d1760201c565b90508051602082016000f091506001600160a01b038216620002145760405163046a55db60e11b815260040160405180910390fd5b50919050565b60608151826040516020016200023292919062000394565b6040516020818303038152906040529050919050565b60006101008083850312156200025d57600080fd5b83601f8401126200026d57600080fd5b6040518181016001600160401b03811182821017156200029d57634e487b7160e01b600052604160045260246000fd5b604052908301908085831115620002b357600080fd5b845b83811015620002cf578051825260209182019101620002b5565b509095945050505050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6101008101818360005b60088110156200033157815183526020928301929091019060010162000310565b50505092915050565b6000815160005b818110156200035d576020818501810151868301520162000341565b818111156200036d576000828601525b509290920192915050565b6000815260006200038d60018301846200033a565b9392505050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b60058201526000620003d2600e8301846200033a565b949350505050565b61060180620003ea6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634bc1010e1461004657806370230b391461006c578063983ca63d14610081575b600080fd5b610059610054366004610372565b610094565b6040519081526020015b60405180910390f35b6100746100ad565b604051610063919061038b565b61005961008f366004610372565b6100ef565b60006100a76100a16100ad565b836101b9565b92915050565b6100b5610353565b6000546100d79073ffffffffffffffffffffffffffffffffffffffff16610207565b8060200190518101906100ea91906103bd565b905090565b60006100a76100fc6100ad565b83610235565b60008061012d83604051602001610119919061049e565b60405160208183030381529060405261018d565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff8216610187576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b60608151826040516020016101a39291906104b1565b6040516020818303038152906040529050919050565b6000805b60088110156101fd578381600881106101d8576101d861053c565b60200201518310156101eb5790506100a7565b806101f58161056b565b9150506101bd565b5060089392505050565b60606100a78260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610267565b6000808211610245576000610260565b82600183036008811061025a5761025a61053c565b60200201515b9392505050565b6060833b80610286575050604080516020810190915260008152610260565b808411156102a4575050604080516020810190915260008152610260565b838310156102f3576040517f2c4a89fa00000000000000000000000000000000000000000000000000000000815260048101829052602481018590526044810184905260640160405180910390fd5b8383038482036000828210610308578261030a565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050509392505050565b6040518061010001604052806008906020820280368337509192915050565b60006020828403121561038457600080fd5b5035919050565b6101008101818360005b60088110156103b4578151835260209283019290910190600101610395565b50505092915050565b60006101008083850312156103d157600080fd5b83601f8401126103e057600080fd5b60405181810181811067ffffffffffffffff82111715610429577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290830190808583111561043e57600080fd5b845b83811015610458578051825260209182019101610440565b509095945050505050565b6000815160005b81811015610484576020818501810151868301520161046a565b81811115610493576000828601525b509290920192915050565b6000815260006102606001830184610463565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f3000000000000000000000000000000000000000000000060058201526000610534600e830184610463565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220745f058439136864e50c02503dff35ac93454c179338c5c89b5dfe3cca56a94464736f6c634300080a0033";

type ValueTierTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ValueTierTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ValueTierTest__factory extends ContractFactory {
  constructor(...args: ValueTierTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    tierValues_: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ValueTierTest> {
    return super.deploy(tierValues_, overrides || {}) as Promise<ValueTierTest>;
  }
  getDeployTransaction(
    tierValues_: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tierValues_, overrides || {});
  }
  attach(address: string): ValueTierTest {
    return super.attach(address) as ValueTierTest;
  }
  connect(signer: Signer): ValueTierTest__factory {
    return super.connect(signer) as ValueTierTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValueTierTestInterface {
    return new utils.Interface(_abi) as ValueTierTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ValueTierTest {
    return new Contract(address, _abi, signerOrProvider) as ValueTierTest;
  }
}
