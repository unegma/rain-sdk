/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TierOpsTest,
  TierOpsTestInterface,
  StateConfigStruct,
} from "../TierOpsTest";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
        ],
        internalType: "struct StateConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    inputs: [],
    name: "run",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "runLength",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "runState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        internalType: "struct State",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001f9238038062001f928339810160408190526200003491620003fd565b60056080526200004e620000488262000061565b6200019b565b6001600160a01b031660a0525062000759565b620000946040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b815151620000d45760405162461bcd60e51b8152602060048201526009602482015268305f534f555243455360b81b604482015260640160405180910390fd5b6040518060a001604052806000815260200183604001516001600160401b03811115620001055762000105620002bd565b6040519080825280602002602001820160405280156200012f578160200160208202803683370190505b508152602001836000015181526020018360200151815260200183606001516001600160401b03811115620001685762000168620002bd565b60405190808252806020026020018201604052801562000192578160200160208202803683370190505b50905292915050565b600080620001d583604051602001620001b5919062000694565b6040516020818303038152906040526200021a60201b620002251760201c565b90507ff95eed63f55d96a35306669cc3b5f652f8d44552e3e4b17b2f78f13571114abd3382856040516200020c93929190620006b0565b60405180910390a192915050565b6000806200025483604051602001620002349190620006de565b6040516020818303038152906040526200028f60201b620002b01760201c565b90508051602082016000f091506001600160a01b038216620002895760405163046a55db60e11b815260040160405180910390fd5b50919050565b6060815182604051602001620002a792919062000706565b6040516020818303038152906040529050919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715620002f857620002f8620002bd565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003295762000329620002bd565b604052919050565b60006001600160401b038211156200034d576200034d620002bd565b5060051b60200190565b60005b83811015620003745781810151838201526020016200035a565b8381111562000384576000848401525b50505050565b600082601f8301126200039c57600080fd5b81516020620003b5620003af8362000331565b620002fe565b82815260059290921b84018101918181019086841115620003d557600080fd5b8286015b84811015620003f25780518352918301918301620003d9565b509695505050505050565b600060208083850312156200041157600080fd5b82516001600160401b03808211156200042957600080fd5b90840190608082870312156200043e57600080fd5b62000448620002d3565b8251828111156200045857600080fd5b8301601f810188136200046a57600080fd5b80516200047b620003af8262000331565b81815260059190911b8201860190868101908a8311156200049b57600080fd5b8784015b838110156200053157805187811115620004b95760008081fd5b8501603f81018d13620004cc5760008081fd5b89810151604089821115620004e557620004e5620002bd565b620004f9601f8301601f19168d01620002fe565b8281528f828486010111156200050f5760008081fd5b62000520838e830184870162000357565b86525050509188019188016200049f565b50845250505082840151828111156200054957600080fd5b62000557888286016200038a565b858301525060408301516040820152606083015160608201528094505050505092915050565b600081518084526020808501945080840160005b83811015620005af5781518752958201959082019060010162000591565b509495945050505050565b80518252600060208083015160a082860152620005db60a08601826200057d565b9050604084015185820360408701528181518084528484019150848160051b850101858401935060005b828110156200064f57601f19808784030185528551805180855262000630818b87018c850162000357565b9689019695890195601f01909116929092018701915060010162000605565b506060880151955088810360608a01526200066b81876200057d565b95505050505050608083015184820360808601526200068b82826200057d565b95945050505050565b602081526000620006a96020830184620005ba565b9392505050565b6001600160a01b038481168252831660208201526060604082018190526000906200068b90830184620005ba565b6000815260008251620006f981600185016020870162000357565b9190910160010192915050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b600582015281516000906200074b81600e85016020870162000357565b91909101600e019392505050565b60805160a0516118146200077e600039600060d30152600061072201526118146000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806345c6a7a6146100465780635ab47a0114610064578063c040622614610084575b600080fd5b61004e61009a565b60405161005b91906111d2565b60405180910390f35b6100776100723660046112b7565b610119565b60405161005b91906112d0565b61008c6101e4565b60405190815260200161005b565b6100cc6040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b60006100f77f00000000000000000000000000000000000000000000000000000000000000006102dc565b905061011460405180602001604052806000815250826000610330565b919050565b6060600061012561009a565b905060008367ffffffffffffffff81111561014257610142611314565b60405190808252806020026020018201604052801561016b578160200160208202803683370190505b50905060005b848110156101dc5760208301518351829061018d908890611372565b6101979190611389565b815181106101a7576101a76113a1565b60200260200101518282815181106101c1576101c16113a1565b60209081029190910101526101d5816113d0565b9050610171565b509392505050565b6000806101ef61009a565b90508060200151600182600001516102079190611372565b81518110610217576102176113a1565b602002602001015191505090565b6000806102508360405160200161023c9190611409565b6040516020818303038152906040526102b0565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff82166102aa576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b60608151826040516020016102c692919061142f565b6040516020818303038152906040529050919050565b61030e6040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b610317826104f6565b80602001905181019061032a91906116cf565b92915050565b602082810151604084015183830201909101516060840151608085015182516000948594859492939092915b848810156104e9576002880197508784015180601e1a975080601f1a96505060058710156104dd5760018714156103bf5781608087166103995750825b8a516020607f89160260200182015160208202602001840152600181018c52505061035c565b60028714156103ea5789516020870260200182015160208202602001830152600181018b525061035c565b6003871415610403576103fe8b8b88610524565b61035c565b6004871415610434576103fe8a60405160200161042091906111d2565b60405160208183030381529060405261068a565b607f6101fe600188901b1617861660808716156104a0578a517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808c5260208c01518051909190811061048a5761048a6113a1565b6020026020010151600014156104a0575061035c565b8060000b6000146104d75760008160000b12156104cb57801960020160020260ff16890398506104d7565b8060020260ff16890198505b5061035c565b6103fe8b8b898961071c565b5050505050505050505050565b606061032a8260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61074f565b81517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600583901c918290030183526007821690610100600384811c1681901c91908290039060010160008167ffffffffffffffff81111561058857610588611314565b6040519080825280602002602001820160405280156105b1578160200160208202803683370190505b50905060005b8281101561060857876020015181896000015101815181106105db576105db6113a1565b60200260200101518282815181106105f5576105f56113a1565b60209081029190910101526001016105b7565b5060005b61010081101561067f5760005b8381101561066c5784828603848381518110610637576106376113a1565b6020026020010151901b901c89608001518281518110610659576106596113a1565b6020908102919091010152600101610619565b50610678898988610330565b840161060c565b505050505050505050565b6107198160405160240161069e91906117b2565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0be77f560000000000000000000000000000000000000000000000000000000017905261083d565b50565b610749837f000000000000000000000000000000000000000000000000000000000000000084038361085e565b50505050565b6060833b8061076e575050604080516020810190915260008152610836565b8084111561078c575050604080516020810190915260008152610836565b838310156107dc576040517f2c4a89fa0000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604481018490526064015b60405180910390fd5b83830384820360008282106107f157826107f3565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050505b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600682106108c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f44450000000000000000000000000000000000000000000060448201526064016107d3565b600082610a17575082517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018452602084015180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9092019182908110610933576109336113a1565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663e053ea318560200151836001018151811061096f5761096f6113a1565b60200260200101516040518263ffffffff1660e01b81526004016109af919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b602060405180830381865afa1580156109cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f091906117c5565b84602001518281518110610a0657610a066113a1565b602002602001018181525050610749565b6001831415610a72577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8460200151856000015181518110610a5b57610a5b6113a1565b602090810291909101015283516001018452610749565b6002831415610a975760008460200151856000015181518110610a5b57610a5b6113a1565b6003831415610b4b575082517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01808452602084015180516000919083908110610ae357610ae36113a1565b60200260200101519050600085602001518360010181518110610b0857610b086113a1565b60200260200101519050610b1c8282610d59565b86602001518481518110610b3257610b326113a1565b6020908102919091010152505083516001018452610749565b6004831415610c13575082517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0180845260208401518051600f80851692600486901c909116916000919085908110610ba657610ba66113a1565b60200260200101519050600087602001518560010181518110610bcb57610bcb6113a1565b60200260200101519050610be182858584610db0565b88602001518681518110610bf757610bf76113a1565b6020908102919091010152505085516001018652506107499050565b6005831415610749575082517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff601f8316918290030180855290600783901c906003600585901c16908360008267ffffffffffffffff811115610c7857610c78611314565b604051908082528060200260200182016040528015610ca1578160200160208202803683370190505b50905060005b83811015610cf65789602001518381518110610cc557610cc56113a1565b6020026020010151828281518110610cdf57610cdf6113a1565b602090810291909101015260019283019201610ca7565b50600089602001518381518110610d0f57610d0f6113a1565b60200260200101519050610d2582828888610e56565b8a602001518881518110610d3b57610d3b6113a1565b60209081029190910101525050875160010188525050505050505050565b60008060015b600881116101dc576000610d738683610fa6565b90506000610d818684610fa6565b90506000610d8f838361105b565b9050610d9f856001860383611071565b94505060019092019150610d5f9050565b6000826008811115610e1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f5449455200000000000000000000000000000000000000000000000060448201526064016107d3565b6000855b85811015610e4a5763ffffffff6020820290811b199890981685891b17979150600101610e22565b50959695505050505050565b835160009081908190819060015b60088111610f9857600092508287610e9d57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610ea1565b5060005b60005b83811015610f5657610ecf8c8281518110610ec157610ec16113a1565b602002602001015184610fa6565b95508a8611610f215788610eee57610ee786836110fb565b9150610f18565b6001891415610f0157610ee78683611111565b600289148015610f0f575084155b15610f18578591505b60019450610f4e565b89610f4e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9150610f56565b600101610ea4565b5083610f7f57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b610f8d866001840383611071565b955050600101610e64565b509298975050505050505050565b6000816008811115611014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f5449455200000000000000000000000000000000000000000000000060448201526064016107d3565b826110225760009150611054565b63ffffffff60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85010285901c1691505b5092915050565b600081831161106b576000610836565b50900390565b60008260088111156110df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f5449455200000000000000000000000000000000000000000000000060448201526064016107d3565b505060209190910290811b63ffffffff90911b19919091161790565b600081831061110a5781610836565b5090919050565b60008183101561110a5781610836565b600081518084526020808501945080840160005b8381101561115157815187529582019590820190600101611135565b509495945050505050565b60005b8381101561117757818101518382015260200161115f565b838111156107495750506000910152565b600081518084526111a081602086016020860161115c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060208083528351818401528084015160a060408501526111f760c0850182611121565b905060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808684030160608701528282518085528585019150858160051b860101868501945060005b82811015611270578487830301845261125e828751611188565b95880195938801939150600101611244565b5060608a01519650838982030160808a015261128c8188611121565b965050505060808701519250808685030160a087015250506112ae8282611121565b95945050505050565b6000602082840312156112c957600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611308578351835292840192918401916001016112ec565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561138457611384611343565b500390565b6000821982111561139c5761139c611343565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561140257611402611343565b5060010190565b600081526000825161142281600185016020870161115c565b9190910160010192915050565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f300000000000000000000000000000000000000000000006005820152600082516114b881600e85016020870161115c565b91909101600e019392505050565b60405160a0810167ffffffffffffffff811182821017156114e9576114e9611314565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561153657611536611314565b604052919050565b600067ffffffffffffffff82111561155857611558611314565b5060051b60200190565b600082601f83011261157357600080fd5b815160206115886115838361153e565b6114ef565b82815260059290921b840181019181810190868411156115a757600080fd5b8286015b848110156115c257805183529183019183016115ab565b509695505050505050565b6000601f83818401126115df57600080fd5b825160206115ef6115838361153e565b82815260059290921b8501810191818101908784111561160e57600080fd5b8287015b848110156116c357805167ffffffffffffffff808211156116335760008081fd5b818a0191508a603f8301126116485760008081fd5b8582015160408282111561165e5761165e611314565b61168d887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c850116016114ef565b92508183528c818386010111156116a45760008081fd5b6116b38289850183870161115c565b5050845250918301918301611612565b50979650505050505050565b6000602082840312156116e157600080fd5b815167ffffffffffffffff808211156116f957600080fd5b9083019060a0828603121561170d57600080fd5b6117156114c6565b8251815260208301518281111561172b57600080fd5b61173787828601611562565b60208301525060408301518281111561174f57600080fd5b61175b878286016115cd565b60408301525060608301518281111561177357600080fd5b61177f87828601611562565b60608301525060808301518281111561179757600080fd5b6117a387828601611562565b60808301525095945050505050565b6020815260006108366020830184611188565b6000602082840312156117d757600080fd5b505191905056fea26469706673582212201cf4c7b5102a115cf6b36c74aaabb1259d1308117da88dbc80bdcd07576d2ec364736f6c634300080a0033";

type TierOpsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TierOpsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TierOpsTest__factory extends ContractFactory {
  constructor(...args: TierOpsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TierOpsTest> {
    return super.deploy(config_, overrides || {}) as Promise<TierOpsTest>;
  }
  getDeployTransaction(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(config_, overrides || {});
  }
  attach(address: string): TierOpsTest {
    return super.attach(address) as TierOpsTest;
  }
  connect(signer: Signer): TierOpsTest__factory {
    return super.connect(signer) as TierOpsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TierOpsTestInterface {
    return new utils.Interface(_abi) as TierOpsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TierOpsTest {
    return new Contract(address, _abi, signerOrProvider) as TierOpsTest;
  }
}
