/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VerifyCallbackTest,
  VerifyCallbackTestInterface,
} from "../VerifyCallbackTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "additions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adder_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Evidence",
        name: "evidence_",
        type: "tuple",
      },
    ],
    name: "afterAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Evidence[]",
        name: "evidences_",
        type: "tuple[]",
      },
    ],
    name: "afterApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "banner_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Evidence[]",
        name: "evidences_",
        type: "tuple[]",
      },
    ],
    name: "afterBan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "remover_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Evidence[]",
        name: "evidences_",
        type: "tuple[]",
      },
    ],
    name: "afterRemove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bans",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "removals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f64806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639897187b1161005b5780639897187b146100ff578063ad285cad14610122578063ebae2d8c14610145578063f24267891461015857600080fd5b806308fac8e31461008d578063376dcbe2146100a25780635d0341ba146100b55780638f6b1146146100ec575b600080fd5b6100a061009b366004610ce8565b61017b565b005b6100a06100b0366004610d3d565b6103e7565b6100d86100c3366004610dc3565b60016020526000908152604090205460ff1681565b604051901515815260200160405180910390f35b6100a06100fa366004610d3d565b6106dd565b6100d861010d366004610dc3565b60036020526000908152604090205460ff1681565b6100d8610130366004610dc3565b60026020526000908152604090205460ff1681565b6100a0610153366004610d3d565b6109ce565b6100d8610166366004610dc3565b60006020819052908152604090205460ff1681565b73ffffffffffffffffffffffffffffffffffffffff82166101fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f41444452455353000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60008061020d6020840184610dc3565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff161561029e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f5052494f525f414444000000000000000000000000000000000000000000000060448201526064016101f4565b60408051808201909152600481527f476f6f64000000000000000000000000000000000000000000000000000000006020918201527fa8dae9b555011d119186698e9c3ac10ea4db14c9780aa0d040dd47e9bfc6f41f9061030190830183610de5565b60405161030f929190610e51565b60405180910390201461037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4241445f45564944454e4345000000000000000000000000000000000000000060448201526064016101f4565b60016000806103906020850185610dc3565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790555050565b73ffffffffffffffffffffffffffffffffffffffff8316610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f41444452455353000000000000000000000000000000000000000000000060448201526064016101f4565b60005b818110156106d7576001600084848481811061048557610485610e61565b90506020028101906104979190610e90565b6104a5906020810190610dc3565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff1615610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f5052494f525f415050524f56450000000000000000000000000000000000000060448201526064016101f4565b60408051808201909152600481527f476f6f64000000000000000000000000000000000000000000000000000000006020909101527fa8dae9b555011d119186698e9c3ac10ea4db14c9780aa0d040dd47e9bfc6f41f83838381811061059e5761059e610e61565b90506020028101906105b09190610e90565b6105be906020810190610de5565b6040516105cc929190610e51565b60405180910390201461063b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4241445f45564944454e4345000000000000000000000000000000000000000060448201526064016101f4565b600180600085858581811061065257610652610e61565b90506020028101906106649190610e90565b610672906020810190610dc3565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055806106cf81610ece565b915050610467565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f41444452455353000000000000000000000000000000000000000000000060448201526064016101f4565b60005b818110156106d7576002600084848481811061077b5761077b610e61565b905060200281019061078d9190610e90565b61079b906020810190610dc3565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff161561082c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f5052494f525f42414e000000000000000000000000000000000000000000000060448201526064016101f4565b60408051808201909152600481527f476f6f64000000000000000000000000000000000000000000000000000000006020909101527fa8dae9b555011d119186698e9c3ac10ea4db14c9780aa0d040dd47e9bfc6f41f83838381811061089457610894610e61565b90506020028101906108a69190610e90565b6108b4906020810190610de5565b6040516108c2929190610e51565b604051809103902014610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4241445f45564944454e4345000000000000000000000000000000000000000060448201526064016101f4565b60016002600085858581811061094957610949610e61565b905060200281019061095b9190610e90565b610969906020810190610dc3565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055806109c681610ece565b91505061075d565b73ffffffffffffffffffffffffffffffffffffffff8316610a4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f41444452455353000000000000000000000000000000000000000000000060448201526064016101f4565b60005b818110156106d75760036000848484818110610a6c57610a6c610e61565b9050602002810190610a7e9190610e90565b610a8c906020810190610dc3565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff1615610b1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5052494f525f52454d4f5645000000000000000000000000000000000000000060448201526064016101f4565b60408051808201909152600481527f476f6f64000000000000000000000000000000000000000000000000000000006020909101527fa8dae9b555011d119186698e9c3ac10ea4db14c9780aa0d040dd47e9bfc6f41f838383818110610b8557610b85610e61565b9050602002810190610b979190610e90565b610ba5906020810190610de5565b604051610bb3929190610e51565b604051809103902014610c22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4241445f45564944454e4345000000000000000000000000000000000000000060448201526064016101f4565b600160036000858585818110610c3a57610c3a610e61565b9050602002810190610c4c9190610e90565b610c5a906020810190610dc3565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905580610cb781610ece565b915050610a4e565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ce357600080fd5b919050565b60008060408385031215610cfb57600080fd5b610d0483610cbf565b9150602083013567ffffffffffffffff811115610d2057600080fd5b830160408186031215610d3257600080fd5b809150509250929050565b600080600060408486031215610d5257600080fd5b610d5b84610cbf565b9250602084013567ffffffffffffffff80821115610d7857600080fd5b818601915086601f830112610d8c57600080fd5b813581811115610d9b57600080fd5b8760208260051b8501011115610db057600080fd5b6020830194508093505050509250925092565b600060208284031215610dd557600080fd5b610dde82610cbf565b9392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610e1a57600080fd5b83018035915067ffffffffffffffff821115610e3557600080fd5b602001915036819003821315610e4a57600080fd5b9250929050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112610ec457600080fd5b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f27577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212201ba96ed9b011bda5ca25721c29971fe905ef5be75828df875afc1c1a9ac935c864736f6c634300080a0033";

type VerifyCallbackTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyCallbackTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyCallbackTest__factory extends ContractFactory {
  constructor(...args: VerifyCallbackTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VerifyCallbackTest> {
    return super.deploy(overrides || {}) as Promise<VerifyCallbackTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VerifyCallbackTest {
    return super.attach(address) as VerifyCallbackTest;
  }
  connect(signer: Signer): VerifyCallbackTest__factory {
    return super.connect(signer) as VerifyCallbackTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyCallbackTestInterface {
    return new utils.Interface(_abi) as VerifyCallbackTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyCallbackTest {
    return new Contract(address, _abi, signerOrProvider) as VerifyCallbackTest;
  }
}
